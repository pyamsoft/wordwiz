/*
 * Copyright 2017 Peter Kenji Yamanaka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext.kotlin_version = '1.1.2-3'
  repositories {
    jcenter()

    maven {
      url "https://plugins.gradle.org/m2/"
    }
    maven {
      url 'https://maven.google.com'
    }
    maven {
      url 'https://jitpack.io'
    }
  }

  ext {
    minSdk = 23
    maxSdk = 25
    buildTools = "25.0.3"

    supportLib = "25.3.1"
    firebase = "10.2.6"
    autoValue = "1.4.1"
    pydroid = "10.3.8"
    leakCanary = "1.5.1"
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:2.3.2'

    // Dex count
    classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.4'

    // Gradle version checker
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'

    // Google services
    classpath 'com.google.gms:google-services:3.0.0'

    // Error prone compiler
    classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.10"

    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

allprojects {
  repositories {
    jcenter()

    maven {
      url 'https://jitpack.io'
    }
    maven {
      url 'https://maven.google.com'
    }
  }

  gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
      options.compilerArgs += ['-XepDisableWarningsInGeneratedCode',
                               '-Xep:MissingOverride:OFF', '-Xlint:unchecked', '-Xlint:deprecation']
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
